name: v4.x checks

on: [workflow_call]

jobs:
  test-node:
    name: Node Test Specs
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [14.x, 16.x, 18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: ~/.npm # this is cache where npm installs from before going out to the network
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install --prefer-offline
    - run: make test-node

  test-browser:
    name: Browser Test Specs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: ~/.npm # this is cache where npm installs from before going out to the network
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install --prefer-offline
    - run: make test-browser

  lint:
    name: Code Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: ~/.npm # this is cache where npm installs from before going out to the network
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
    - run: npm install --prefer-offline
    - run: make lint

  major:
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.npm-major.outputs.version }}
    steps:
      - id: npm-major
        run: echo version=$(npm view cross-fetch@latest version | cut -d. -f1) >> "$GITHUB_OUTPUT"

  typecheck:
    name: Types
    runs-on: ubuntu-latest
    needs: [major]
    steps:
    - run: echo "$LATEST"
      env:
        LATEST: ${{needs.major.outputs.latest}}
    - if: needs.major.outputs.latest == 3
      run: echo 3
    - if: needs.major.outputs.latest != 3
      run: echo not 3
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: ~/.npm # this is cache where npm installs from before going out to the network
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
    - run: npm install --prefer-offline
    - run: make typecheck
